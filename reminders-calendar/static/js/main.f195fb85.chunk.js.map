{"version":3,"sources":["util/dates.js","redux/calendarReducer.js","redux/actions.js","redux/store.js","components/SelectColor.js","components/Reminder.js","util/weather.js","components/EditReminder.js","components/Day.js","components/DayContainer.js","components/Month.js","components/Calendar.js","index.js"],"names":["plusDays","days","date","newDate","Date","setDate","getDate","makeCalendarRows","year","month","chunkSize","src","firstDay","lastDay","Number","firstWeekDay","getDay","lastWeekDay","firstShowingDate","lastShowingDate","i","slice","pop","push","Array","from","length","Math","ceil","_","localizedWeekDays","locale","navigator","language","userLanguage","d","sunday","toLocaleDateString","weekday","today","isToday","getMonth","getFullYear","formatTime","time","output","test","split","hours","minutes","padStart","join","identity","v","setMonth","state","byAction","dayPath","reminder","day","get","set","Object","prevIndex","findIndex","r","id","filter","item","reducer","action","type","initialState","reminders","store","createStore","rootReducer","SelectColor","current","onSelect","palette","React","useState","selected","setSelected","useEffect","map","color","key","style","display","width","height","margin","backgroundColor","border","onClick","noop","connect","addReminder","text","random","toString","substr","toISOString","editReminder","onSave","newReminder","setNewReminder","loaded","loading","data","weather","setWeather","errors","setErrors","editing","daysDistance","date1","date2","oneDayMs","setHours","getTime","daysBetween","city","pickDay","url","fetch","then","res","json","temp","condition","iconCode","rh","tempUnit","icon","getWeather","timeRegex","setReminderValue","value","evt","target","idPrefix","className","onSubmit","e","preventDefault","err","match","RegExp","exec","validate","toLocaleString","classnames","alt","htmlFor","autoComplete","autoFocus","maxLength","onChange","pattern","remove","open","setOpen","closeModal","title","textAlign","fontSize","padding","ariaHideApp","isOpen","onRequestClose","contentLabel","shouldCloseOnOverlayClick","enhance","outOfMonth","sort","a","b","noA","noB","aDate","bDate","cleanReminders","window","confirm","Month","dayNames","dayName","textTransform","weeks","row","prevMonth","currentMonth","nextMonth","monthNumber","monthName","justifyContent","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.f195fb85.chunk.js","sourcesContent":["// date utils\n\n\nconst chunkify = (chunkSize, src) => Array.from(\n  { length: Math.ceil(src.length/chunkSize) },\n  (_, i) => src.slice(i*chunkSize,i*chunkSize+chunkSize)\n)\n\nconst plusDays = (days, date) => {\n  const newDate = new Date(date)\n  newDate.setDate(date.getDate() + days)\n  return newDate\n}\n\nexport const makeCalendarRows = (year, month) => {\n\n  const firstDay = new Date(year, month, 1);\n  const lastDay = new Date(year, Number(month) + 1, 0);\n\n  const firstWeekDay = firstDay.getDay();\n  const lastWeekDay = lastDay.getDay();\n\n  // pull back first date to prev sunday\n  const firstShowingDate = (firstWeekDay > 0)\n    ? plusDays(-firstWeekDay, firstDay)\n    : new Date(firstDay)\n\n  // push last date to following saturday\n  const lastShowingDate = (lastWeekDay < 6) \n    ? plusDays(6 - lastWeekDay, lastDay)\n    : new Date(lastDay)\n\n  // add all days that will be shown in an array\n  const days = [\n    firstShowingDate\n  ]\n\n  let i = 0;\n  while (days.slice(-1).pop() < lastShowingDate) {\n    days.push(plusDays(++i, firstShowingDate))\n  }\n\n  // then split the array in rows of 7 days\n  return chunkify(7, days)\n}\n\n\nexport const localizedWeekDays = (() => {\n  const locale = navigator.language || navigator.userLanguage || \"en\";\n  // create a sunday\n  const d = new Date();\n  const sunday = plusDays(-d.getDay(), d)\n  const result = Array.from(\n    { length: 7 }, \n    (_, i) => plusDays(i, sunday).toLocaleDateString(locale, { weekday: \"long\" })\n  )\n  return result;\n})(); // iife\n\nconst today = new Date()\nexport const isToday = date => \n  date.getDate() === today.getDate()\n  && date.getMonth() === today.getMonth()\n  && date.getFullYear() === today.getFullYear()\n\nexport const daysBetween = (date1, date2 = new Date()) => {\n  const oneDayMs = 1000*60*60*24\n  date1.setHours(0, 0, 0, 0)\n  date2.setHours(0, 0, 0, 0)\n  return Math.ceil( (date1.getTime() - date2.getTime()) / oneDayMs )\n}\n\nexport const formatTime = time => {\n  let output = time.slice(0)\n  if (!/:/g.test(time)) {\n    output = time + ':00'\n  }\n  const [hours = '', minutes = ''] = output.split(':')\n  output = [hours.padStart(2, '0'), minutes.padStart(2, '0')].join(':')\n  return output\n}","import get from 'lodash/fp/getOr'\nimport set from 'lodash/fp/setWith'\nimport { PREV_MONTH, NEXT_MONTH, ADD_REMINDER, EDIT_REMINDER, DELETE_REMINDER, CLEAN_REMINDERS } from '@/redux/actions'\n\nconst identity = v => v\n\nconst setMonth = (state, { month }) => {\n  return {\n    ...state,\n    month\n  }\n}\n\nconst byAction = {\n  [PREV_MONTH]: setMonth,\n  [NEXT_MONTH]: setMonth,\n  [ADD_REMINDER]: (state, { dayPath, reminder }) => {\n    const day = get([], dayPath, state)\n    return set(Object, dayPath, [...day, reminder], state)\n  },\n  [EDIT_REMINDER]: (state, { dayPath, reminder }) => {\n    const day = get([], dayPath, state)\n    const prevIndex = day.findIndex(r => r.id === reminder.id)\n    // it shouldnt happen that the reminder does not exist, \n    // but anyway lets make it failproof\n    if (prevIndex === -1) {\n      return state\n    }\n    return set(Object, `${dayPath}[${prevIndex}]`, reminder, state)\n  },\n  [DELETE_REMINDER]: (state, { dayPath, id }) => {\n    const day = get([], dayPath, state)\n    return set(Object, dayPath, day.filter(item => item.id !== id), state)\n  },\n  [CLEAN_REMINDERS]: (state, { dayPath }) => set(Object, dayPath, [], state)\n}\n\n\nconst reducer = (state, action) => get(identity, action.type, byAction)(state, action)\n\nexport default reducer\n","import { formatTime } from '@/util/dates'\nconst uniqueId = () => Math.random().toString(36).substr(2, 9)\n\nexport const PREV_MONTH = 'calendar/PREV_MONTH'\nexport const NEXT_MONTH = 'calendar/NEXT_MONTH'\nexport const ADD_REMINDER = 'calendar/ADD_REMINDER'\nexport const EDIT_REMINDER = 'calendar/EDIT_REMINDER'\nexport const DELETE_REMINDER = 'calendar/DELETE_REMINDER'\nexport const CLEAN_REMINDERS = 'calendar/CLEAN_REMINDERS'\n\nexport const prevMonth = currentMonth => {\n  const month = new Date(currentMonth)\n  month.setMonth(currentMonth.getMonth() - 1)\n  return { type: PREV_MONTH, month }\n}\n\nexport const nextMonth = currentMonth => {\n  const month = new Date(currentMonth)\n  month.setMonth(currentMonth.getMonth() + 1)\n  return { type: NEXT_MONTH, month }\n}\n\nexport const addReminder = ({ date = new Date(), reminder }) => {\n  const year = new Date(date).getFullYear()\n  const month = new Date(date).getMonth()\n  const day = new Date(date).getDate()\n\n  if (reminder.time && reminder.time.length) {\n    reminder.time = formatTime(reminder.time)\n  }\n\n  reminder.text = reminder.text.slice(0, 30)\n\n  return {\n    type: ADD_REMINDER,\n    dayPath: `reminders.${year}.${month}.${day}`,\n    reminder: {\n      id: uniqueId(),\n      date: new Date(date).toISOString(),\n      ...reminder\n    }\n  }\n}\n\nexport const editReminder = ({ reminder }) => {\n  const { date } = reminder\n  const year = new Date(date).getFullYear()\n  const month = new Date(date).getMonth()\n  const day = new Date(date).getDate()\n\n  if (reminder.time && reminder.time.length) {\n    reminder.time = formatTime(reminder.time)\n  }\n  reminder.text = reminder.text.slice(0, 30)\n\n  return {\n    type: EDIT_REMINDER,\n    dayPath: `reminders.${year}.${month}.${day}`,\n    reminder\n  }\n}\n\nexport const deleteReminder = ({ date, id }) => {\n  const year = new Date(date).getFullYear()\n  const month = new Date(date).getMonth()\n  const day = new Date(date).getDate()\n  return {\n    type: DELETE_REMINDER,\n    dayPath: `reminders.${year}.${month}.${day}`,\n    id\n  }\n}\n\nexport const cleanReminders = date => {\n  const year = new Date(date).getFullYear()\n  const month = new Date(date).getMonth()\n  const day = new Date(date).getDate()\n  return {\n    type: CLEAN_REMINDERS,\n    dayPath: `reminders.${year}.${month}.${day}`\n  }\n}\n","import { createStore } from 'redux'\nimport rootReducer from '@/redux/calendarReducer'\nconst reminders = {}\n\nconst initialState = {\n  month: new Date(),\n  reminders\n}\n\nconst store = createStore(rootReducer, initialState)\n\nexport default store","import React from 'react'\n\nconst SelectColor = ({ current, onSelect }) => {\n  const palette = [\n    '#97E5B7',\n    '#F9E9C7',\n    '#8CCCCF',\n    '#D870AB',\n    '#EFB292'\n  ]\n  const [selected, setSelected] = React.useState(current || palette[0])\n\n  React.useEffect(() => {\n    onSelect(selected)\n    // eslint-disable-next-line\n  }, [])\n\n  return palette.map(color => (\n    <button\n      key={color}\n      type=\"button\"\n      style={{\n        display: 'inline-block',\n        width: 20,\n        height: 20,\n        margin: 5,\n        backgroundColor: color,\n        border: selected === color ? '1px solid black' : 'none'\n      }}\n      onClick={() => {\n        setSelected(color)\n        onSelect(color)\n      }}>\n      &nbsp;\n    </button>\n    )\n  )\n}\n\nexport default SelectColor","import React from 'react'\nimport classnames from 'classnames'\nimport { connect } from 'react-redux'\nimport { addReminder, editReminder } from '@/redux/actions'\nimport { daysBetween } from '@/util/dates'\nimport { getWeather } from '@/util/weather'\n\nimport SelectColor from '@/components/SelectColor'\n\nconst locale = navigator.language || navigator.userLanguage || 'en'\nconst noop = () => {}\n\nconst Reminder = ({ reminder, addReminder, editReminder, onSave = noop }) => {\n  const [newReminder, setNewReminder] = React.useState(reminder)\n  const [weather, setWeather] = React.useState({\n    loaded: false,\n    loading: false,\n    data: {}\n  })\n  const [errors, setErrors] = React.useState([])\n\n  const editing = reminder.id\n  const date = new Date(reminder.date)\n  const daysDistance = daysBetween(date)\n  \n  React.useEffect(() => {\n    \n    if (daysDistance < 0 || daysDistance > 15) {\n      return\n    }\n    if (!editing || !reminder.city) {\n      return\n    }\n    if (weather.loaded || weather.loading) {\n      return\n    }\n    setWeather({\n      ...weather,\n      loading: true\n    })\n    getWeather(reminder.city, daysDistance).then(data => {\n      setWeather({\n        loading: false,\n        loaded: true,\n        data\n      })\n    })\n  }, [editing, daysDistance, weather, reminder.date, reminder.city])\n\n  const timeRegex = '^([0-9]{1,2})(:([0-9]{2}))?$'\n  const validate = () => {\n    const err = []\n    try {\n      if (!newReminder.text || newReminder.text.length > 30) {\n        err.push('Invalid text')\n      }\n      if (newReminder.time && newReminder.time.length) {\n        const match = new RegExp(timeRegex).exec(newReminder.time)\n        if (!match \n            || Number(match[1]) > 23 \n            || Number(match[3]) > 59) {\n          err.push('Invalid time')\n        }\n      }\n    } catch(e) {\n      err.push('Something failed')\n    }\n    return err\n  }\n\n  const onSubmit = e => {\n    e.preventDefault()\n    const err = validate()\n    if (err.length) {\n      setErrors(err)\n      return\n    }\n    const action = editing ? editReminder : addReminder\n    action({\n      date: reminder.date,\n      reminder: newReminder\n    })\n    setErrors([])\n    onSave()\n  }\n\n  const setReminderValue = value => evt => {\n    setErrors([])\n    setNewReminder({ ...newReminder, [value]: evt.target.value })\n  }\n\n  const idPrefix = date.getTime()\n\n  return (\n    <form className=\"reminder\" onSubmit={onSubmit} action=\"#\">\n      <h2>\n        {editing ? 'Edit reminder' : 'New reminder'}\n      </h2>\n      <h3>\n        {date.toLocaleString(locale, { weekday: 'long', month: 'long', day: 'numeric' })}\n      </h3>\n      <div className={classnames('weather', { loaded: weather.loaded })}>\n      {weather.loaded ? (\n        <>\n          <strong>Weather forecast:</strong>\n          <p>Temp: {weather.data.temp}°{weather.data.tempUnit} &mdash; Hum: {weather.data.rh}%</p>\n          <p>{weather.data.condition}</p>\n          <img src={weather.data.icon} loading=\"lazy\" alt={weather.data.condition} />\n        </>\n      ) : weather.loading ? 'Loading...' : '' }\n      </div>\n\n      <hr />\n      {errors.map((err,i) => <p key={i} style={{color: 'red'}}>{err}</p>)}\n      <label htmlFor={`#${idPrefix}-text`}>\n        Text:\n        <input\n          autoComplete=\"off\"\n          autoFocus\n          maxLength=\"30\"\n          id={`${idPrefix}-text`}\n          type=\"text\"\n          value={newReminder.text || ''}\n          onChange={setReminderValue('text')} />\n      </label>\n      <label htmlFor={`#${idPrefix}-time`}>\n        Time: \n        <br/><small style={{color: 'gray'}}>(format <code>HH:MM</code>)</small>\n        <input\n          id={`${idPrefix}-time`}\n          pattern={timeRegex}\n          autoComplete=\"off\"\n          maxLength=\"5\"\n          type=\"text\"\n          value={newReminder.time || ''}\n          onChange={setReminderValue('time')} />\n      </label>\n      <label htmlFor={`#${idPrefix}-city`}>\n        City:\n        <input\n          id={`${idPrefix}-city`}\n          type=\"text\"\n          value={newReminder.city || ''}\n          onChange={setReminderValue('city')} />\n      </label>\n      <label htmlFor={`#${idPrefix}-color`}>\n        Color:\n        <SelectColor\n          current={newReminder.color}\n          onSelect={color => setNewReminder({...newReminder, color})} />\n      </label>\n\n      <button type=\"submit\">Save</button>\n    </form>\n  )\n}\n\nexport default connect(null, {\n  addReminder,\n  editReminder\n})(Reminder)","import get from 'lodash/fp/getOr'\n\nexport const getWeather = (city, pickDay) => {\n  // HEADS UP\n  // as this project is only a demo\n  // we are sending the request from the frontend, including potentially sensitive data (API Key)\n  // this shouldn't be an issue\n  // at worst, if exploited, my free account in weatherbit will be locked\n  const url = `https://api.weatherbit.io/v2.0/forecast/daily?city=${city}&key=43d788ce256d446288f4443a81c5eda3`\n  return fetch(url).then(\n    res => res.json()\n  ).then(res => {\n    const day = get({}, `data[${pickDay}]`, res)\n    const temp = get('', 'temp', day)\n    const tempUnit = 'C'\n    const condition = get('', 'weather.description', day)\n    const iconCode = get('', 'weather.icon', day)\n    return {\n      rh: day.rh,\n      temp,\n      tempUnit,\n      condition,\n      icon: `https://www.weatherbit.io/static/img/icons/${iconCode}.png`\n    }\n  })\n}","import React from 'react'\nimport Modal from 'react-modal'\nimport { connect } from 'react-redux'\nimport { deleteReminder } from '@/redux/actions'\nimport Reminder from '@/components/Reminder'\n\nconst EditReminder = ({ reminder, remove }) => {\n  const [open, setOpen] = React.useState(false)\n  const closeModal = () => setOpen(false)\n  return (\n    <span key={reminder.id}>\n      <button\n        title=\"View/Edit\"\n        type=\"button\"\n        style={{ backgroundColor: reminder.color, textAlign: 'left', margin: '0 3px 3px 0', fontSize: '0.7rem' }}\n        onClick={() => setOpen(!open)}>\n        {reminder.time ? reminder.time : ''}\n        {' '}\n        {reminder.text}\n      </button>\n      <button\n        title=\"Remove\"\n        type=\"button\"\n        style={{\n          fontSize: '0.5rem',\n          backgroundColor: 'crimson',\n          padding: 2\n        }}\n        onClick={() => remove(reminder)}>\n        &times;\n      </button>\n      <Modal\n        ariaHideApp={false}\n        isOpen={open}\n        onRequestClose={closeModal}\n        contentLabel=\"Minimal Modal Example\"\n        shouldCloseOnOverlayClick={true}>\n        <header>\n          <button onClick={closeModal}>&times;</button>\n        </header>\n        <Reminder reminder={reminder} onSave={closeModal} />\n      </Modal>\n    </span>)\n}\n\nexport default connect(null, {\n  remove: deleteReminder\n})(EditReminder)","import React from 'react'\nimport classnames from 'classnames'\nimport Modal from 'react-modal'\n\nimport { isToday } from '@/util/dates'\nimport Reminder from '@/components/Reminder'\nimport EditReminder from '@/components/EditReminder'\nimport enhance from './DayContainer'\n\nconst Day = ({ date, outOfMonth, reminders, cleanReminders }) => {\n\n  const [open, setOpen] = React.useState(false)\n  const openModal = () => setOpen(true)\n  const closeModal = () => setOpen(false)\n\n  return <td \n    className={classnames('day', {\n      outOfMonth,\n      today: isToday(date)\n    })}>\n      <span className=\"number\">{date.getDate()}</span>\n      {reminders.map(reminder => <EditReminder reminder={reminder} key={reminder.id} />)}\n      <button title=\"Add Reminder\" className=\"addReminder\" onClick={openModal}>+</button>\n      {reminders.length > 1 && <button title=\"Remove ALL\" className=\"cleanReminders\" onClick={() => {\n        if (window.confirm) {\n          const sure = window.confirm('Remove all reminders for this day. Are you sure?')\n          if (!sure) return\n        }\n        cleanReminders(date)\n      }}>&times;</button>}\n      <Modal\n        ariaHideApp={false}\n        isOpen={open}\n        onRequestClose={closeModal}\n        shouldCloseOnOverlayClick={true}>\n        <header>\n          <button onClick={closeModal}>&times;</button>\n        </header>\n        <Reminder reminder={{ date: new Date(date) }} onSave={closeModal} />\n      </Modal>\n  </td>\n}\n\nexport default enhance(Day)\n","import get from 'lodash/fp/getOr'\nimport { connect } from 'react-redux'\nimport { cleanReminders } from '@/redux/actions'\n\nconst mapStateToProps = (state, { date }) => {\n  const year = date.getFullYear()\n  const month = date.getMonth()\n  const day = date.getDate()\n  return {\n    outOfMonth: month !== state.month.getMonth(),\n    reminders: get([], `reminders.${year}.${month}.${day}`, state).sort((a, b) => {\n      const noA = !a.time || a.time === ''\n      const noB = !b.time || b.time === ''\n      if (noA) {\n        return noB ? 0 : 1\n      }\n      if (noB) {\n        return -1\n      }\n      const aDate = new Date(`1970-01-01T${a.time}Z`)\n      const bDate = new Date(`1970-01-01T${b.time}Z`)\n      return aDate.getTime() - bDate.getTime()\n    })\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { cleanReminders }\n)\n\n","import React from 'react'\n\nimport { localizedWeekDays, makeCalendarRows } from '@/util/dates'\n\nimport Day from '@/components/Day'\n\nconst Month = ({ year, month }) => {\n  const dayNames = localizedWeekDays.map(dayName => (\n    <th key={dayName} style={{ textTransform: \"capitalize\" }}>\n      {dayName}\n    </th>))\n  \n  const weeks = makeCalendarRows(year, month).map(row => \n    <tr key={row[0].getTime()}>\n      {row.map(day => \n        <Day\n          key={day.getTime()}\n          date={day} />\n      )}\n    </tr>)\n\n  return (\n    <table className=\"month\">\n      <thead>\n        <tr>\n          {dayNames}\n        </tr>\n      </thead>\n      <tbody>{weeks}</tbody>\n    </table>\n  );\n}\n\nexport default Month\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { prevMonth, nextMonth } from '@/redux/actions'\nimport Month from '@/components/Month'\n\nconst Calendar = ({ month, nextMonth, prevMonth }) => {\n  const year = month.getFullYear()\n  const monthNumber = month.getMonth()\n  const monthName = month.toLocaleDateString('es', { month: 'long' })\n\n  const title = (\n    <header style={{ display: 'flex', justifyContent: 'space-between'}}>\n      <button\n        className=\"navigate prevMonth\"\n        onClick={() => prevMonth(month)}>\n          &laquo;\n      </button>\n      <h1 style={{textTransform: 'capitalize' }}>{`${monthName} ${year}`}</h1>\n      <button\n        className=\"navigate nextMonth\"\n        onClick={() => nextMonth(month)}>\n          &raquo;\n      </button>\n    </header>\n  )\n\n  return (\n    <div id=\"container\">\n      {title}\n      <Month year={year} month={monthNumber} />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  month: state.month\n})\n\nexport default connect(\n  mapStateToProps,\n  {\n    prevMonth,\n    nextMonth\n  }\n)(Calendar)\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from 'react-redux'\n\nimport store from '@/redux/store'\nimport Calendar from '@/components/Calendar'\n\nimport \"@/style.css\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Calendar />\n    </Provider>\n  )\n}\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}