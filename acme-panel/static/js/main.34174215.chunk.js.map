{"version":3,"sources":["shell/theme.js","shell/NotificationsBadge/index.js","shell/NotificationsBadge/NotificationsBadge.js","shell/SidebarNav/SidebarNav.js","shell/SidebarNav/index.js","shell/Copyright/index.js","shell/Copyright/Copyright.js","shell/Layout/Layout.js","shell/Layout/index.js","pages/NotFound/NotFound.js","pages/NotFound/index.js","App.js","reportWebVitals.js","index.js","shell/alarmsContext.js"],"names":["darkTheme","createMuiTheme","palette","type","primary","amber","secondary","pink","NotificationsBadge","count","props","min","max","safeCount","Math","content","IconButton","color","title","Badge","badgeContent","ListItemLink","to","icon","activeOnlyWhenExact","match","useRouteMatch","path","exact","CustomLink","React","useMemo","forwardRef","linkProps","ref","useCustomLink","ListItem","button","component","selected","ListItemIcon","ListItemText","SidebarNav","subheaderText","items","List","ListSubheader","inset","map","text","Copyright","Typography","variant","align","Date","getFullYear","Link","href","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","height","overflow","container","paddingTop","paddingBottom","Layout","children","classes","useState","open","setOpen","sidebarItems","activeAlarms","useAlarms","data","loadAlarms","useEffect","a","fetch","json","alarms","randomAlarms","filter","parseInt","random","useFetchAlarms","paused","length","className","CssBaseline","AppBar","clsx","Toolbar","edge","aria-label","onClick","noWrap","Drawer","paper","Divider","Container","maxWidth","Grid","Box","pt","flexDirection","textAlign","btn","NotFound","item","xs","Paper","Button","RouterLink","size","Dashboard","lazy","Alarms","Content","Loading","style","CircularProgress","App","ThemeProvider","defaultTheme","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","value","deleteAlarm","pauseAlarm","resumeAlarm","AlarmsContext","createContext","AlarmsProvider","useReducer","alarmsReducer","dispatch","dispatchers","payload","id","contextValue","Provider","prevState","load","delete","state","pause","resume","selector","ctx","useContext"],"mappings":"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","file":"static/js/main.34174215.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\nimport amber from \"@material-ui/core/colors/amber\";\nimport pink from \"@material-ui/core/colors/pink\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: amber,\n    secondary: pink,\n  },\n});\n\nexport default darkTheme;\n","import NotificationsBadge from \"./NotificationsBadge\";\nexport default NotificationsBadge;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\n\nexport default function NotificationsBadge({ count, ...props }) {\n  const { min = 0, max = 99 } = props;\n\n  const safeCount = Math.max(min, ~~count); // fallback to 0 if below min\n  let content = safeCount > max ? `${max}+` : safeCount;\n  return (\n    <IconButton color=\"inherit\" title={safeCount}>\n      <Badge badgeContent={content} color=\"secondary\">\n        <NotificationsIcon />\n      </Badge>\n    </IconButton>\n  );\n}\nNotificationsBadge.propTypes = {\n  count: PropTypes.number,\n  min: PropTypes.number,\n  max: PropTypes.number,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\n\nexport default function SidebarNav({ subheaderText, items }) {\n  return (\n    <List>\n      <ListSubheader inset>{subheaderText}</ListSubheader>\n      <>\n        {items.map(({ path, text, icon, activeOnlyWhenExact }) => (\n          <ListItemLink\n            key={path}\n            to={path}\n            primary={text}\n            icon={icon}\n            activeOnlyWhenExact={!!activeOnlyWhenExact}\n          />\n        ))}\n      </>\n    </List>\n  );\n}\n\nSidebarNav.propTypes = {\n  subheaderText: PropTypes.string,\n  items: PropTypes.array,\n};\n\nconst useCustomLink = (to) =>\n  React.useMemo(\n    () =>\n      // eslint-disable-next-line react/display-name\n      React.forwardRef((linkProps, ref) => (\n        <Link {...linkProps} to={to} ref={ref} />\n      )),\n    [to]\n  );\n\nfunction ListItemLink({ to, primary, icon, activeOnlyWhenExact }) {\n  let match = useRouteMatch({\n    path: to,\n    exact: activeOnlyWhenExact,\n  });\n\n  const CustomLink = useCustomLink(to);\n\n  return (\n    <ListItem button component={CustomLink} selected={!!match}>\n      <ListItemIcon>{icon}</ListItemIcon>\n      <ListItemText primary={primary} />\n    </ListItem>\n  );\n}\nListItemLink.propTypes = {\n  ...Link.propTypes,\n  activeOnlyWhenExact: PropTypes.bool,\n};\n","import SidebarNav from \"./SidebarNav\";\nexport default SidebarNav;\n","import Copyright from \"./Copyright\";\nexport default Copyright;\n","import Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"© \"}\n      {new Date().getFullYear()} {\"with ❤ from \"}\n      <small>\n        <Link color=\"inherit\" href=\"https://github.com/tincho/\">\n          <code>@mrtinsal</code>\n        </Link>\n      </small>\n      {\" to \"}\n      <Link color=\"inherit\" href=\"https://atixlabs.com/\">\n        AtixLabs\n      </Link>\n    </Typography>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\n\nimport NotificationsBadge from \"../NotificationsBadge\";\nimport SidebarNav from \"../SidebarNav\";\nimport Copyright from \"../Copyright\";\n\nimport { useAlarms } from \"../alarmsContext\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst useFetchAlarms = () => {\n\n  const { data, loadAlarms } = useAlarms();\n  React.useEffect(async () => {\n    const alarms = await (await fetch(\"./alarms.json\")).json()\n    const randomAlarms = alarms.filter(() => parseInt(Math.random() * 2));\n    loadAlarms(randomAlarms);\n  }, []);\n  \n  return data\n}\n\n\nexport default function Layout({ children }) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const sidebarItems = [\n    {\n      path: \"/\",\n      text: \"Dashboard\",\n      activeOnlyWhenExact: true,\n      icon: <DashboardIcon />,\n    },\n    { path: \"/alarms\", text: \"Alarms\", icon: <AssignmentIcon /> },\n  ];\n\n  const data = useFetchAlarms()\n  const activeAlarms = data.filter(({ paused }) => paused !== \"true\").length\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Amazing Center for Monitoring Everything\n          </Typography>\n          <NotificationsBadge count={activeAlarms} />\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <SidebarNav subheaderText=\"Settings\" items={sidebarItems} />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {children}\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nLayout.propTypes = {\n  children: PropTypes.element,\n};\n","import Layout from \"./Layout\";\nexport default Layout;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(4),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    textAlign: \"center\",\n    justifyContent: \"space-between\",\n    height: 240,\n  },\n  btn: {\n    textAlign: \"center\",\n  },\n}));\n\nexport default function NotFound() {\n  const classes = useStyles();\n  return (\n    <Grid item xs={12}>\n      <Paper className={classes.paper}>\n        <Typography component=\"h4\" variant=\"h4\">\n          ¯\\_(ツ)_/¯\n        </Typography>\n        <Button\n          component={RouterLink}\n          to=\"/\"\n          variant=\"outlined\"\n          className={classes.btn}\n          size=\"large\"\n        >\n          Go home\n        </Button>\n      </Paper>\n    </Grid>\n  );\n}\n","import NotFound from \"./NotFound\";\nexport default NotFound;\n","import { lazy, Suspense } from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { AlarmsProvider } from \"./shell/alarmsContext\";\n\nimport defaultTheme from \"./shell/theme\";\nimport Layout from \"./shell/Layout\";\n\nimport NotFound from \"./pages/NotFound\";\nconst Dashboard = lazy(() => import(\"./pages/Dashboard\"));\nconst Alarms = lazy(() => import(\"./pages/Alarms\"));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={defaultTheme}>\n        <Router>\n          <AlarmsProvider>\n            <Layout>\n              <Suspense fallback={<Loading />}>\n                <Content />\n              </Suspense>\n            </Layout>\n          </AlarmsProvider>\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nfunction Content() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Dashboard} exact />\n      <Route path=\"/alarms\" component={Alarms} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction Loading() {\n  return (\n    <div\n      style={{\n        height: \"60vh\",\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <CircularProgress />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// eslint-disable-next-line no-undef\nif (process.env.NODE_ENV === \"development\") {\n  const { worker } = require(\"./mocks/browser\");\n  worker.start();\n}\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createContext, useContext, useReducer } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst value = {\n  data: [],\n  loadAlarms: () => {},\n  deleteAlarm: () => {},\n  pauseAlarm: () => {},\n  resumeAlarm: () => {},\n};\n\nconst AlarmsContext = createContext(value);\n\nexport function AlarmsProvider({ children }) {\n  const [data, dispatch] = useReducer(alarmsReducer, []);\n\n  const dispatchers = {\n    loadAlarms: (payload) => dispatch({ type: \"load\", payload }),\n    deleteAlarm: (id) => dispatch({ type: \"delete\", payload: id }),\n    pauseAlarm: (id) => dispatch({ type: \"pause\", payload: id }),\n    resumeAlarm: (id) => dispatch({ type: \"resume\", payload: id }),\n  };\n\n  const contextValue = {\n    data,\n    ...dispatchers,\n  };\n\n  return (\n    <AlarmsContext.Provider value={contextValue}>\n      {children}\n    </AlarmsContext.Provider>\n  );\n}\nAlarmsProvider.propTypes = {\n  children: PropTypes.element,\n};\n\nfunction alarmsReducer(prevState, { type, payload }) {\n  const identity = (a) => a;\n  const actions = {\n    load: () => payload,\n    delete: (state) => state.filter(({ id }) => id !== payload),\n    pause: (state) =>\n      state.map(({ paused, ...item }) => ({\n        ...item,\n        paused: item.id === payload ? \"true\" : paused,\n      })),\n    resume: (state) =>\n      state.map(({ paused, ...item }) => ({\n        ...item,\n        paused: item.id === payload ? \"false\" : paused,\n      })),\n  };\n\n  const reducer = actions[type] || identity;\n  const newState = reducer(prevState);\n  return newState;\n}\n\nexport const useAlarms = (selector) => {\n  const ctx = useContext(AlarmsContext);\n  if (selector) {\n    return ctx[selector];\n  }\n  return ctx;\n};\n\nexport default { AlarmsContext, AlarmsProvider, useAlarms };\n"],"sourceRoot":""}